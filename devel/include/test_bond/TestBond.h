// Generated by gencpp from file test_bond/TestBond.msg
// DO NOT EDIT!


#ifndef TEST_BOND_MESSAGE_TESTBOND_H
#define TEST_BOND_MESSAGE_TESTBOND_H

#include <ros/service_traits.h>


#include <test_bond/TestBondRequest.h>
#include <test_bond/TestBondResponse.h>


namespace test_bond
{

struct TestBond
{

typedef TestBondRequest Request;
typedef TestBondResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct TestBond
} // namespace test_bond


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::test_bond::TestBond > {
  static const char* value()
  {
    return "1c7d43df2e371719140975f9c404a8bb";
  }

  static const char* value(const ::test_bond::TestBond&) { return value(); }
};

template<>
struct DataType< ::test_bond::TestBond > {
  static const char* value()
  {
    return "test_bond/TestBond";
  }

  static const char* value(const ::test_bond::TestBond&) { return value(); }
};


// service_traits::MD5Sum< ::test_bond::TestBondRequest> should match
// service_traits::MD5Sum< ::test_bond::TestBond >
template<>
struct MD5Sum< ::test_bond::TestBondRequest>
{
  static const char* value()
  {
    return MD5Sum< ::test_bond::TestBond >::value();
  }
  static const char* value(const ::test_bond::TestBondRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::test_bond::TestBondRequest> should match
// service_traits::DataType< ::test_bond::TestBond >
template<>
struct DataType< ::test_bond::TestBondRequest>
{
  static const char* value()
  {
    return DataType< ::test_bond::TestBond >::value();
  }
  static const char* value(const ::test_bond::TestBondRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::test_bond::TestBondResponse> should match
// service_traits::MD5Sum< ::test_bond::TestBond >
template<>
struct MD5Sum< ::test_bond::TestBondResponse>
{
  static const char* value()
  {
    return MD5Sum< ::test_bond::TestBond >::value();
  }
  static const char* value(const ::test_bond::TestBondResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::test_bond::TestBondResponse> should match
// service_traits::DataType< ::test_bond::TestBond >
template<>
struct DataType< ::test_bond::TestBondResponse>
{
  static const char* value()
  {
    return DataType< ::test_bond::TestBond >::value();
  }
  static const char* value(const ::test_bond::TestBondResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TEST_BOND_MESSAGE_TESTBOND_H
